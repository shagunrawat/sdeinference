f <- function(theta, x) {
return((theta[1])*(theta[2] - x))
}
return(test)
}
fudgenorm = sum(sp.grid$weights %*% myweight(pdfin))
print(fudgenorm)
source('~/Box Sync/randomfiles/ndtqv2.R')
source('~/Box Sync/randomfiles/ndtqv2.R')
source('~/Box Sync/randomfiles/ndtqv2.R')
sum(sp.grid$weights %*% pdfin)
sum(pdfin)
sum(sp.grid$weights %*% exp(pdfin))
sum(sp.grid$weights %*% myweight(pdfin))
sum(abs(exp(pdfin) - myweight(pdfin)))
vfmat = matrix(0,nrow=4,ncol=4)
vfmat[1,] = c(0,1,0.5)
vfmat[1,] = c(0,1,0,0.5)
vmfat[2,] = c(-1,-1,0,0)
vfmat[2,] = c(-1,-1,0,0)
vfmat[3,] = c(0,1,0,1)
vfmat[4,] = c(0,0,-1,-1)
vfmat
eigen(vfmat)$values
sp.grid$nodes[1:4,]
sum(sp.grid$nodes[1,]^2)
pdfin[1,]
pdfin[1]
pdfin[2]
max(pdfin)
myweight <- function(inpdf)
{
test = inpdf
for (i in c(1:nrow(sp.grid$nodes)))
{
thisx = sp.grid$nodes[i,]
test[i] = test[i] + (sum(thisx^2))/2 # *(sqrt(2*pi))^(mydim)
}
return(test)
}
pdfin2 = myweight(pdfin)
sum(abs(pdfin2-pdfin))
sum(exp(pdfin2))
sp.grid$weights
sp.grid$weights %*% exp(pdfin2)
sp.grid$weights %*% exp(pdfin2) / prod(mysig)
sp.grid$weights %*% exp(pdfin2) * prod(mysig)
sp.grid$weights %*% exp(pdfin2) * prod(mysig) * (2*pi)^2
source('~/Box Sync/randomfiles/ndtqv2.R')
source('~/Box Sync/randomfiles/ndtqv2.R')
source('~/Box Sync/randomfiles/ndtqv2.R')
source('~/Box Sync/randomfiles/ndtqv2.R')
source('~/Box Sync/randomfiles/ndtqv2.R')
source('~/Box Sync/randomfiles/ndtqv2.R')
source('~/Box Sync/randomfiles/ndtqv2.R')
f
source('~/Box Sync/randomfiles/ndtqv2.R')
source('~/Box Sync/randomfiles/ndtqv2.R')
source('~/Box Sync/randomfiles/ndtqv2.R')
source('~/Box Sync/randomfiles/ndtqv2.R')
pdfin = initpdf2(icvec=ic*mysig)
pdfin
sum(sp.grid$weights %*% pdfin)
sum(sp.grid$weights %*% 1)
sum(sp.grid$weights)
sum(sp.grid$weights %*% pdfin)
sum(sp.grid$weights %*% pdfin) * (2*pi)
sum(sp.grid$weights %*% pdfin) * sqrt(2*pi)
source('~/Box Sync/randomfiles/ndtqv2.R')
source('~/Box Sync/randomfiles/ndtqv2.R')
source('~/Box Sync/randomfiles/ndtqv2.R')
source('~/Box Sync/randomfiles/ndtqv2.R')
source('~/Box Sync/randomfiles/ndtqv2.R')
j
print(sum(sp.grid$weights %*% pdfout))
source('~/Box Sync/randomfiles/ndtqv2.R')
source('~/Box Sync/randomfiles/ndtqv2.R')
sqrt(2.699308)
source('~/Box Sync/randomfiles/ndtqv2.R')
4.257448/2.018628
9.544688/4.257448
source('~/Box Sync/randomfiles/ndtqv2.R')
source('~/Box Sync/randomfiles/ndtqv2.R')
source('~/Box Sync/randomfiles/ndtqv2.R')
source('~/Box Sync/randomfiles/ndtqv2.R')
source('~/Box Sync/randomfiles/ndtqv2.R')
source('~/Box Sync/randomfiles/ndtqv2.R')
source('~/Box Sync/randomfiles/ndtqv2.R')
source('~/Box Sync/randomfiles/ndtqv2.R')
source('~/Box Sync/randomfiles/ndtqv2.R')
txtProgressBar()
source('~/Box Sync/randomfiles/ndtqv2.R')
source('~/Box Sync/randomfiles/ndtqv2.R')
source('~/Box Sync/randomfiles/ndtqv2.R')
source('~/Box Sync/randomfiles/ndtqv2.R')
runif(1)
runif(1)
runif(1)
runif(1)
runif(1)
runif(1)
runif(1)
runif(1)
runif(1)
? rexp
source('~/Box Sync/math181/lostprofessor.R')
source('~/Box Sync/math181/lostprofessor.R')
busfirst
mean(busfirst)
source('~/Box Sync/math181/lostprofessor.R')
mean(busfirst)
source('~/Box Sync/math181/lostprofessor.R')
mean(busfirst)
rexp(n=1,rate=6)
rexp(n=1,rate=6)
rexp(n=1,rate=6)
rexp(n=1,rate=6)
rexp(n=1,rate=6)
mean(rexp(n=1000,rate=6))
mean(rexp(n=100000,rate=6))
1/6
source('~/Box Sync/math181/lostprofessor.R')
mean(busfirst)
source('~/Box Sync/math181/lostprofessor.R')
mean(busfirst)
source('~/Box Sync/math181/lostprofessor.R')
mean(busfirst)
source('~/Box Sync/math181/lostprofessor.R')
mean(busfirst)
1 - 0.5*exp(-2)
0.5 - 0.5*exp(-2)
source('~/Box Sync/math181/lostprofessor.R')
source('~/Box Sync/math181/lostprofessor.R')
source('~/Box Sync/math181/lostprofessor.R')
source('~/Box Sync/math181/lostprofessor.R')
simul
exact
source('~/Box Sync/math181/condexp.R')
length(mysamp)
length(filtsamp)
source('~/Box Sync/math181/condexp.R')
source('~/Box Sync/math181/condexp.R')
source('~/Box Sync/math181/condexp.R')
source('~/Box Sync/math181/condexp.R')
source('~/Box Sync/math181/condexp.R')
source('~/Box Sync/math181/condexp.R')
source('~/Box Sync/math181/condexp.R')
source('~/Box Sync/math181/condexp.R')
source('~/Box Sync/math181/condexp.R')
source('~/Box Sync/math181/condexp.R')
source('~/Box Sync/math181/condexp.R')
source('~/Box Sync/math181/condexp.R')
source('~/Box Sync/math181/condexp.R')
2263/365
(1-exp(-6.2))
(1-exp(-6.2))^365
print(sum(sp.grid$weights))
length(sp.grid$weights)
length(sp.grid$weights*sp.grid$nodes[,1])
sum(sp.grid$weights %*% sp.grid$nodes[,1])
sum(sp.grid$weights %*% sp.grid$nodes[,1]^2)
sum(sp.grid$weights %*% sp.grid$nodes[,2]^2)
sum(sp.grid$weights %*% sp.grid$nodes[,3]^2)
sum(sp.grid$weights %*% sp.grid$nodes[,4]^2)
sum(sp.grid$weights %*% (2*sp.grid$nodes[,4])^2)
pow
sp.grid = createSparseGrid('KPN',dimension=4,k=10)
? createSparseGrid
sp.grid = createSparseGrid('KPU',dimension=4,k=10)
sp.grid = createSparseGrid('KPU',dimension=1,k=10)
sp.grid$nodes
xi = 2
x = 3
2*xi(sp.grid$nodes - 0.5) + x
2*xi*(sp.grid$nodes - 0.5) + x
x
sp.grid
2*xi*(sp.grid$nodes-0.5)
sp.grid
sp.grid = createSparseGrid('KPU',dimension=1,k=24)
sp.grid$nodes
sp.grid = createSparseGrid('KPU',dimension=1,k=100)
sp.grid = createSparseGrid('KPU',dimension=1,k=50)
sp.grid = createSparseGrid('KPU',dimension=1,k=25)
sp.grid = createSparseGrid('GQU',dimension=1,k=10)
sp.grid$nodes
diff(sp.grid$nodes)
sp.grid = createSparseGrid('GQN',dimension=1,k=10)
diff(sp.grid$nodes)
? createSparseGrid
source('~/Box Sync/randomfiles/dtqsp.R')
source('~/Box Sync/randomfiles/dtqsp.R')
source('~/Box Sync/randomfiles/dtqsp.R')
pdfin
sum(sp.grid$weight %*% pdfin)
ym
source('~/Box Sync/randomfiles/dtqsp.R')
sum(sp.grid$weight %*% pdfin)
2*ym
sum(sp.grid$weight %*% pdfin)*2*ym
ym
source('~/Box Sync/randomfiles/dtqsp.R')
sum(sp.grid$weight %*% pdfin)*2*ym
sum(sp.grid$weight %*% pdfin)
h
mysig
pdfin
source('~/Box Sync/randomfiles/dtqsp.R')
source('~/Box Sync/randomfiles/dtqsp.R')
pdfin
sum(sp.grid$weight %*% pdfin)
z
ym
2*ym
sum(sp.grid$weight %*% pdfin)
sum(sp.grid$weight %*% pdfin)*2*ym
pdfin
plot(z,pdfin)
source('~/Box Sync/randomfiles/dtqsp.R')
source('~/Box Sync/randomfiles/dtqsp.R')
source('~/Box Sync/randomfiles/dtqsp.R')
sum(sp.grid$weight %*% pdfin)*2*ym
source('~/Box Sync/randomfiles/dtqsp.R')
source('~/Box Sync/randomfiles/dtqsp.R')
pdfin
print(sum(pdfin %*% sp.grid$weights)*2*ym)
source('~/Box Sync/randomfiles/dtqsp.R')
source('~/Box Sync/randomfiles/dtqsp.R')
sp.grid = createSparseGrid('KPU',dimension=4,k=25)
source('~/Box Sync/randomfiles/dtqsp.R')
(10/10.2)^50
m = matrix(0,nrow=5,ncol=5)
m[1,1] = 1
m[5,5] = 1
m[2,] = c(.6,0,.4,0,0)
m[3,] = c(0,.6,0,.4,0)
m[4,] = c(0,0,.6,0,.4)
m
m %*% m %*% m
m = matrix(0,nrow=3,ncol=3)
m[1,] = c(0,.5,.5)
m[2,] = c(.75,0,.25)
m[3,] = c(.75,.25,0)
m %*% m
m %*% m %*% m
13/32
m = matrix(0,nrow=4,ncol=4)
m[1,] = c(.6,.4,0,0)
m[2,] = c(0,0,.6,.4)
m[3,] = c(.6,.4,0,0)
m[4,] = c(0,0,.3,.7)
m
m %*% m
m = matrix(0,nrow=3,ncol=3)
m[1,] = c(.5.,4,.1)
m[1,] = c(.5,.4,.1)
m[2,] = c(.2,.5,.3)
m[3,] = c(.1,.3,.6)
eigen(t(m))
eigen(t(m))$vectors[,1] -> v
v/sum(v)
m[1,] = c(.6,.4,0)
m[2,] = c(.2,.4,.2)
m[3,] = c(0,.2,.8)
eigen(t(m))
11/47
19/47
17/47
m = matrix(0,nrow=4,ncol=4)
m[1,] = c(.7,0,.3,0)
m[2,] = c(.6,0,.4,0)
m[3,] = c(0,.5,0,.5)
m[4,] = c(0,.4,0,.6)
eigen(t(m))
eigen(t(m))[,1] ->v
eigen(t(m))$vectors[,1] -> v
v/sum(v)
m[1,] = c(.7,.3,0,0)
m[2,] = c(.2,.5,.3,0)
m[3,] = c(0,.3,.6,1)
m[4,] = c(0,0,.2,.8)
eigen(t(m))[,1] ->v
eigen(t(m))
m[3,] = c(0,.3,.6,.1)
eigen(t(m))
eigen(t(m))$vectors[,1] -> v
v/sum(v)
c(8/21,4/21,4/21,5/21)
c(4/19,6/19,6/19,3/19)
m = matrix(0,nrow=3,ncol=3)
m[1,] = c(.2,.4,.4)
m[2,] = c(.1,.6,.3)
m[3,] = c(.2,.6,.2)
eigen(t(m))
eigen(t(m))$vectors[,1]
eigen(t(m))$vectors[,1] -> v
v/sum(v)
1/252
25/252
25/63
m = matrix(0,nrow=4,ncol=4)
m[1,] = c(.6,.4,0,0)
m[2,] = c(0,0,.6,.4)
m[3,] = c(.6,.4,0,0)
m[4,] = c(0,0,.3,.7)
eigen(t(m))
eigen(t(m))$vectors[,1]
eigen(t(m))$vectors[,1] -> v
v/sum(v)
9/29
6/29
6/29
8/29
0.2*exp(-0.2)
0.5*exp(-0.5)
1 - exp(-0.2)
1 - exp(-0.5)
24*8*7 + 36 - 36^2
runif()
? runif
? rpois
source('~/Box Sync/math181/prob2.21.R')
xvec
mean(xvec)
var(xvec)
source('~/Box Sync/math181/prob2.21.R')
mean(xvec)
var(xvec)
(7/3)*24^2
1344 + 36
36^2
1380-36^2
16*136
sqrt(2176)
80*1300
sqrt(104000)
m = matrix(0,nrow=2,ncol=2)
m[1,] = c(0.45,.4)
m[2,] = c(0,.6)
diag(2) - m
solve(diag(2) - m)
solve(diag(2) - m)
matrix(c(0,.15,.3,.1),nrow=2,ncol=2)
matrix(c(0,.3,.15,.1),nrow=2,ncol=2)
solve(diag(2) - m) %*% matrix(c(0,.3,.15,.1),nrow=2,ncol=2)
(1-.45)^(-1)
matrix(c(5/4,0,5/3,20/9),nrow=2)
matrix(c(5/4,0,5/3,20/9),nrow=2) %*% matrix(c(0,.15,.2,.3),nrow=2)
matrix(c(5/4,0,5/3,20/9),nrow=2)
5/4 + 5/3
6/11
40/11
35/12
m = matrix(c(0,.75,0,.4,0,.75,0,.25,0),nrow=3)
m
solve(diag(3) - m)
solve(diag(3) - m) %*% matrix(c(0,0,.25,.6,0,0),nrow=3)
solve(diag(3) - m) %*% c(1,1,1)
72/73
72/75
72/76
105/41
160/41
161/41
5/6 + 1/4
1/3 + 1/4
7/12
8 - 53
8 - 5/3
17/12
8 - 17/12
1/2 + 1 + 1/2 + 1/4 + 2/3
8-3
? sample
sample(c(1:10),10,replace=FALSE)
sample(c(1:10),10,replace=FALSE)
sample(c(1:10),10,replace=FALSE)
sample(c(1:10),10,replace=FALSE)
? save
source('~/Desktop/emcrash/gensim.R')
x
plot(density(x))
source('~/Desktop/emcrash/gensim.R')
plot(density(x))
source('~/Desktop/emcrash/gensim.R')
plot(density(x))
? optim
? dexp
x
source('~/Desktop/emcrash/em.R')
p
lamb
source('~/Desktop/emcrash/em.R')
p
lamb
source('~/Desktop/emcrash/em.R')
p
lamb
source('~/Desktop/emcrash/gensim.R')
source('~/Desktop/emcrash/em.R')
p
lamb
source('~/Desktop/emcrash/em.R')
p
lamb
source('~/Desktop/emcrash/em.R')
plot(loglik)
source('~/Desktop/emcrash/em.R')
plot(loglik)
source('~/Desktop/emcrash/gensim.R')
source('~/Desktop/emcrash/em.R')
plot(loglik)
p
lamb
source('~/Desktop/emcrash/gensim.R')
source('~/Desktop/emcrash/em.R')
p
lamb
plot(loglik)
plot(log(abs(loglik)))
plot(-log(abs(loglik)))
plot(loglik)
plot(loglik[-1])
? optim
source('~/Desktop/emcrash/bfgs.R')
warnings()
source('~/research/sdeinference/EM/kolmogorov_compare.R')
source('~/research/sdeinference/EM/kolmogorov_compare.R')
source('~/research/sdeinference/EM/kolmogorov_compare.R')
source('~/research/sdeinference/EM/kolmogorov_compare.R')
source('~/research/sdeinference/EM/test_em.R')
source('~/research/sdeinference/EM/kolmogorov_compare.R')
source('~/research/sdeinference/EM/dtq_main.R')
source('~/research/sdeinference/EM/test_em.R')
source('~/research/sdeinference/EM/makefakedata.R')
source('~/research/sdeinference/EM/makefakedata.R')
source('~/research/sdeinference/EM/makefakedata.R')
source('~/research/sdeinference/EM/makefakedata.R')
source('~/research/sdeinference/EM/test_em.R')
source('~/research/sdeinference/EM/kolmogorov_compare.R')
source('~/research/sdeinference/EM/test_em.R')
source('~/research/sdeinference/EM/kolmogorov_compare.R')
source('~/research/sdeinference/EM/test_em.R')
source('~/research/sdeinference/EM/test_em.R')
source('~/research/sdeinference/EM/test_em.R')
source('~/research/sdeinference/EM/kolmogorov_compare.R')
source('~/research/sdeinference/EM/kolmogorov_compare.R')
source('~/research/sdeinference/EM/kolmogorov_compare.R')
source('~/research/sdeinference/EM/test_em_all.R')
source('~/research/sdeinference/EM/test_em_all.R')
source('~/research/sdeinference/EM/test_em_all.R')
source('~/Desktop/sdeinference/EM/test_em.R')
source('~/Desktop/sdeinference/EM/test_em.R')
install.packages('matrixcalc')
source('~/Desktop/sdeinference/EM/test_em.R')
source('~/Desktop/sdeinference/EM/test_em_all.R')
rm(list = ls(all = TRUE))
library("matrixcalc")
# xtraj = matrix(nrow = 1, ncol = 2)
# load necessary functions
source('dtq_main.R')
source('Dtheta.R')
k = 0.01
M = 800
deltat = 1
numsteps = 50
h = deltat/numsteps
theta = c(1, 0, 2)
init = 1
final = 3
source('kolmogorov_compare.R')
allout = dtq_all(theta, h, k, M, numsteps, init, final)
exactcomplete = transition_forward(theta,x=final,y=init,t=deltat)
print(c(log(allout$complete),log(exactcomplete)))
print(c(sum(allout$first)*k,sum(allout$last)*k))
source('~/Desktop/sdeinference/EM/inferencetest.R')
install.packages("nloptr")
source('~/Desktop/sdeinference/EM/inferencetest.R')
source('~/Desktop/sdeinference/EM/test_em_all.R')
rm(list = ls(all = TRUE))
library("matrixcalc")
# xtraj = matrix(nrow = 1, ncol = 2)
# load necessary functions
source('dtq_main.R')
source('Dtheta.R')
k = 0.01
M = 800
deltat = 1
numsteps = 50
h = deltat/numsteps
theta = c(1, 0, 2)
init = 1
final = 3
# source('kolmogorov_compare.R')
allout = dtq_all(theta, h, k, M, numsteps, init, final)
rm(list = ls(all = TRUE))
library("matrixcalc")
# xtraj = matrix(nrow = 1, ncol = 2)
# load necessary functions
source('dtq_main.R')
source('Dtheta.R')
k = 0.01
M = 800
deltat = 1
numsteps = 50
h = deltat/numsteps
theta = c(1, 0, 2)
init = 1
final = 3
source('kolmogorov_compare.R')
allout = dtq_all(theta, h, k, M, numsteps, init, final)
source('~/Desktop/sdeinference/EM/test_em_all.R')
